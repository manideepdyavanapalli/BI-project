
/*
1.	Executive leadership wants to see premium production by effective month compared to plan. Please include both monthly & rolling 12 month aggregations. (SQL & simple visual)

*/

/*
Data transformations

ALTER TABLE [dbo].[premium_bdx]
alter column [effective date] date

ALTER TABLE [dbo].[premium_bdx]
alter column [Amount Paid] float

ALTER TABLE [dbo].[pet_plan]
alter column [month_end] date
*/


SELECT * FROM [DBO].[PREMIUM_BDX]

SELECT * FROM [dbo].[pet_plan]

SELECT * FROM [dbo].[claim_bdx] order by 1




--taking the premium and effective date fron the premium_bdx table

DROP TABLE IF EXISTS #PREM
  SELECT SUM([AMOUNT PAID]) 'PREMIUM',FORMAT([EFFECTIVE DATE], 'MMM-yy')'MMM-YY' ,YEAR([EFFECTIVE DATE])'YEAR', MONTH([EFFECTIVE DATE]) 'MONTH' 
		INTO #PREM
		FROM [DBO].[PREMIUM_BDX] 
			GROUP BY FORMAT([EFFECTIVE DATE], 'MMM-yy'),YEAR([EFFECTIVE DATE]), MONTH([EFFECTIVE DATE])  
			ORDER BY YEAR([EFFECTIVE DATE]), MONTH([EFFECTIVE DATE])

			select * from #PREM

--calculating rolling total


DROP TABLE IF EXISTS #PREM1
SELECT *,SUM(PREMIUM) OVER(ORDER BY [YEAR], [MONTH] ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) 'ROLLING TOTAL' INTO #PREM1
					FROM #PREM


DROP TABLE IF EXISTS #PREM2
SELECT *,SUM(PREMIUM) OVER(ORDER BY [YEAR], [MONTH] ) 'ROLLING TOTAL' INTO #PREM2
					FROM #PREM

--TESTING
--DROP TABLE IF EXISTS #PREM1
SELECT *,SUM(PREMIUM) OVER(ORDER BY [YEAR], [MONTH] ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) 'ROLLING TOTAL'
		, SUM(PREMIUM) OVER(ORDER BY [YEAR], [MONTH] ) 'ROLLING TOTAL'
		,SUM(PREMIUM) OVER(ORDER BY [YEAR], [MONTH] ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) 'ROLLING TOTAL'
					FROM #PREM


SELECT * FROM #PREM1

SELECT * FROM #PREM2 ORDER BY [YEAR], [MONTH]


DROP TABLE IF EXISTS #PLAN
 SELECT  *,FORMAT([MONTH_END], 'MMM-yy')'MMM-YY' INTO #PLAN FROM [DBO].[PET_PLAN] 

 select * from #PLAN

 --RESULT

 SELECT A.[MMM-YY],A.MONTHLY_PLAN, A.R12_PLAN, B.PREMIUM,B.[ROLLING TOTAL]
		FROM #PLAN A JOIN #PREM1 B ON A.[MMM-YY]=B.[MMM-YY] ORDER BY YEAR,MONTH



/*

2.	Leadership is considering offering discounts for multi-pet households. First they want to understand whether having multiple pets may lead to more claims, broadly. 
Please build a simple visualization that shows whether multi-pet households have a higher or lower incidence of claim frequency (claims per count of policies)  and severity (loss amount per count of policies). (SQL & simple visual)

*/


DROP TABLE IF EXISTS #TEMP
SELECT A.[PET OWNER ID],A.NUM_PETS,B.NUM_PETS_CLAIMED,B.NUM_CLAIMS,TOTAL_PREM,B.TOTAL_PAID INTO #TEMP 
	FROM 
	(
SELECT A.[PET OWNER ID], COUNT(DISTINCT A.[ACCOUNT ID]) 'NUM_PETS' ,SUM([AMOUNT PAID]) 'TOTAL_PREM'
		FROM [DBO].[PREMIUM_BDX] A GROUP BY [PET OWNER ID])A
		LEFT JOIN (SELECT [PET OWNER ID], COUNT( DISTINCT [ACCOUNT ID]) 'NUM_PETS_CLAIMED',COUNT(DISTINCT [CLAIM ID]) 'NUM_CLAIMS', SUM([LOSS PAID]) 'TOTAL_PAID' FROM [MASTER].[DBO].[CLAIM_BDX] A 
			GROUP BY [PET OWNER ID])B ON A.[PET OWNER ID]=B.[PET OWNER ID]



SELECT * FROM 

--result

 SELECT COUNT(1) POLICIES,SUM(NUM_PETS) NUM_PETS,SUM(NUM_PETS_CLAIMED) NUM_PETS_CLAIMED,SUM(NUM_CLAIMS) NUM_CLAIMS,SUM(TOTAL_PAID) TOTAL_PAID, 
				ROUND(CAST(SUM(NUM_CLAIMS) AS FLOAT)/CAST(COUNT(1) AS FLOAT),2) 'CLAIMS_PER_POL', ROUND(CAST(SUM(TOTAL_PAID) AS FLOAT)/CAST(COUNT(1) AS FLOAT),2) 'SEVERITY'
				,ROUND(CAST(SUM(TOTAL_PAID) AS FLOAT)/CAST(SUM(TOTAL_PREM) AS FLOAT),2) 'CLAIMED_PREM'
				FROM #TEMP WHERE NUM_PETS>1




 SELECT COUNT(1) POLICIES,SUM(NUM_PETS) NUM_PETS,SUM(NUM_PETS_CLAIMED) NUM_PETS_CLAIMED,SUM(NUM_CLAIMS) NUM_CLAIMS,SUM(TOTAL_PAID) TOTAL_PAID ,
				ROUND(CAST(SUM(NUM_CLAIMS) AS FLOAT)/CAST(COUNT(1) AS FLOAT),2) 'CLAIMS_PER_POL', ROUND(CAST(SUM(TOTAL_PAID) AS FLOAT)/CAST(COUNT(1) AS FLOAT),2) 'SEVERITY'
				, ROUND(CAST(SUM(TOTAL_PAID) AS FLOAT)/CAST(SUM(TOTAL_PREM) AS FLOAT),2) 'CLAIMED_PREM'
				FROM #TEMP WHERE NUM_PETS=1

/*
3.	Leadership is trying to determine whether to devote more resources to the web portal or to the call center. 
			Calculate the average days to bind (difference between app date & inception date) & average policy premium by application type (SQL only)

*/



DROP TABLE IF EXISTS #TEMP
SELECT [PET OWNER ID],  [PET OWNER NAME], [ACCOUNT POLICY PERIOD ID], [APPLICATION TYPE], [APPLICATION DATE], [INCEPTION DATE], SUM([AMOUNT PAID]) 'POLICY_PREM' 
			INTO #TEMP
			FROM [DBO].[PREMIUM_BDX]
				GROUP BY [PET OWNER ID], [ACCOUNT POLICY PERIOD ID], [APPLICATION TYPE], [APPLICATION DATE], [INCEPTION DATE], [PET OWNER NAME] ORDER BY 1


--result

SELECT [APPLICATION TYPE],AVG(DATEDIFF(DAY,[APPLICATION DATE],[INCEPTION DATE])) 'BIND', ROUND(AVG(POLICY_PREM),2) 'AVG_POLICY_PREM' FROM #TEMP GROUP BY [APPLICATION TYPE]



/*

4.	Extra Credit/Optional (if you have time): Our claims adjusters do not provide losses allocated to the coverage level as found on the premium dataset. 
Allocate the losses to the coverage level programmatically. Hint: You could use the premium coverage amounts as the basis for this allocation. (SQL only)

*/

DROP TABLE IF EXISTS #TEMP
SELECT [PET OWNER ID], [PET OWNER NAME], [ACCOUNT ID], [COVERAGE GROUP DESCRIPTION], SUM([AMOUNT PAID]) 'PREM_COV' INTO #TEMP FROM [DBO].[PREMIUM_BDX] 
	GROUP BY [PET OWNER ID], [PET OWNER NAME], [ACCOUNT ID], [COVERAGE GROUP DESCRIPTION]
	ORDER BY 1


DROP TABLE IF EXISTS #TEMP1	
SELECT *, SUM(PREM_COV)OVER(PARTITION BY [PET OWNER ID]) 'PREM_POL', (PREM_COV/SUM(PREM_COV)OVER(PARTITION BY [PET OWNER ID]))*100 'PORTION' INTO #TEMP1 FROM #TEMP

DROP TABLE IF EXISTS #TEMP2	
SELECT [PET OWNER ID], [ACCOUNT ID], SUM([LOSS PAID]) 'TOTAL_LOSSES' INTO #TEMP2 FROM [MASTER].[DBO].[CLAIM_BDX] GROUP BY [PET OWNER ID], [ACCOUNT ID] ORDER BY 1


--result

SELECT A.[PET OWNER ID], A.[PET OWNER NAME], A.[ACCOUNT ID], [COVERAGE GROUP DESCRIPTION], PREM_COV, PREM_POL, PORTION, TOTAL_LOSSES, 
			ROUND((A.PORTION*B.TOTAL_LOSSES)/100,2) 'PAID_PER_COV' FROM #TEMP1 A JOIN #TEMP2 B ON A.[PET OWNER ID]=B.[PET OWNER ID] AND A.[ACCOUNT ID]=B.[ACCOUNT ID]



